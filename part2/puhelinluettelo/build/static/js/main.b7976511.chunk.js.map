{"version":3,"sources":["components/Person.js","components/PersonList.js","components/Filter.js","components/NewName.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["Person","name","number","id","handleDeletion","onClick","PersonList","persons","filter","person","toLowerCase","includes","map","filteredperson","Filter","handleFilter","value","onChange","NewName","props","onSubmit","addNewName","newName","handleNewName","newNumber","handleNewNumber","type","baseUrl","axios","get","then","response","data","newObject","post","request","put","console","log","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","messageType","setMessageType","useEffect","phonebookService","initialPhoneBook","catch","error","event","target","preventDefault","personsObject","personId","indexOf","window","confirm","newPhoneBook","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7976511.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({name, number, id, handleDeletion}) => {\r\n    return (\r\n        <div>\r\n            {name} {number} <button onClick={()=> handleDeletion(id)}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst PersonList = ({persons, filter, handleDeletion}) => {\r\n    return (\r\n        <ul>\r\n            {persons.filter(person => person.name.toLowerCase()\r\n            .includes(filter.toLowerCase())).map(filteredperson => (\r\n            <Person key={filteredperson.name} name={filteredperson.name} number={filteredperson.number} \r\n            id={filteredperson.id} handleDeletion={handleDeletion}/>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PersonList","import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilter}) => {\r\n    return (\r\n        <form>\r\n        <div>\r\n          filter shown with <input \r\n          value={filter} \r\n          onChange={handleFilter}\r\n          />\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst NewName = (props) =>  {\r\n    return (\r\n        <form onSubmit={props.addNewName}>\r\n        <div>\r\n        name: <input \r\n        value={props.newName}\r\n        onChange={props.handleNewName}\r\n        /></div>\r\n        <div>\r\n        number: <input \r\n        value={props.newNumber}\r\n        onChange={props.handleNewNumber}\r\n        />\r\n        </div>\r\n        <div>\r\n        <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n)\r\n}\r\n\r\nexport default NewName","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request =  axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    console.log(request)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletion = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, deletion}","import React from 'react'\r\n\r\nconst Notification = ({message, value}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={value}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport PersonList from './components/PersonList'\r\nimport Filter from './components/Filter'\r\nimport NewName from './components/NewName'\r\nimport phonebookService from './services/phonebook'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ filter, setFilter] = useState('')\r\n  const [ errorMessage, setErrorMessage] = useState(null)\r\n  const [ messageType, setMessageType] = useState('')\r\n\r\n  useEffect(() => {\r\n    phonebookService\r\n      .getAll()\r\n        .then(initialPhoneBook => {\r\n          setPersons(initialPhoneBook)\r\n          setMessageType('succeed')\r\n        })\r\n          .then(\r\n            setErrorMessage('All names fetched'))\r\n          .catch(error => {\r\n            setMessageType('error')\r\n            setErrorMessage(error.message)\r\n          })\r\n  }, [])\r\n\r\n  const handleNewName = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const addNewName = (event) => {\r\n    event.preventDefault()\r\n    const personsObject = {\r\n      \"name\": newName,\r\n      \"number\": newNumber\r\n    }\r\n    const personId = persons.map(person => person.name).indexOf(newName)\r\n    \r\n    //If person is found in phonebook ask if can be replaced\r\n    if (personId > -1){\r\n      if (window.confirm(`${newName} is already added to the phonebook. \r\n      Do you want to replace the old number with a new one?`)){\r\n        // replacing person from phonebook\r\n        phonebookService\r\n          .update(persons[personId].id, personsObject)\r\n            .then(newPhoneBook =>{\r\n              setPersons(persons.map(person => person.id !== newPhoneBook.id ? \r\n                person : newPhoneBook))\r\n              console.log(persons)\r\n              setMessageType('succeed')\r\n              setErrorMessage(`${newName} added succesfully`)\r\n            })\r\n            .catch(error => {\r\n              // removing person from display if already removed\r\n              setMessageType('error')\r\n              setErrorMessage(`${newName} has already been deleted from the server.`)\r\n              setPersons(persons.filter(person => person.id !== persons[personId].id))\r\n            })\r\n      }\r\n    }\r\n    else { \r\n      phonebookService\r\n        .create(personsObject)\r\n          .then(newPhoneBook => {\r\n            setPersons(persons.concat(newPhoneBook))\r\n            setMessageType('succeed')\r\n            setErrorMessage(`${newName} added succesfully`)\r\n          })\r\n          .catch(error => {\r\n            setMessageType('error')\r\n            setErrorMessage(error.message)\r\n          })\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n    }\r\n\r\n  const handleNewNumber = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilter = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const handleDeletion = (id) => {\r\n    if (window.confirm(\"Do you really want to delete person\")) {\r\n      phonebookService\r\n        .deletion(id)\r\n          .then(() => {setPersons(persons.filter(person => person.id !== id))\r\n          setMessageType('succeed')\r\n          setErrorMessage('Person deleted from phonebook')})\r\n            .catch(error => {\r\n              setMessageType('error')\r\n              setErrorMessage(error.message)})\r\n          }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>      \r\n      <Filter handleFilter={handleFilter} filter={filter}/>\r\n\r\n      <h3>Add new</h3>\r\n      <Notification message={errorMessage} value={messageType} />\r\n      <NewName handleNewName={handleNewName} handleNewNumber={handleNewNumber}\r\n        newName={newName} newNumber={newNumber} addNewName={addNewName}/>\r\n      \r\n      <h3>Numbers</h3>\r\n      <PersonList persons={persons} filter={filter} handleDeletion={handleDeletion}/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n  ReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}